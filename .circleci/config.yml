version: 2.1

workflows:
  version: 2
  test_window_arm64:
    jobs:
      - build_tests
      - run_tests:
          requires:
          - build_tests

jobs:
  # compile tests for arm64
  build_tests:
    machine:
      image: windows-server-2022-gui:current
    resource_class: windows.medium
    shell: 'powershell.exe -ExecutionPolicy Bypass'
    steps:
      - checkout
      - run: pip install --upgrade pip certifi
      - run: pip install meson

      # need to update certificate for accessing to WrapDB
      - run: 
          name: update certificate
          # use a pem file from certifi
          command: |
            $cert_pem = python -m certifi
            $plaintext_pw = 'PASSWORD'
            $secure_pw = ConvertTo-SecureString $plaintext_pw -AsPlainText -Force
            openssl.exe pkcs12 -export -nokeys -out $env:TEMP\certs.pfx -in $cert_pem -passout pass:$plaintext_pw
            Import-PfxCertificate -Password $secure_pw  -CertStoreLocation Cert:\LocalMachine\Root -FilePath $env:TEMP\certs.pfx

      - run:
          name: cross compile
          # need to compile on the dev shell
          command: | 
            $vswhere = "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe"
            $instanceId = & $vswhere -property instanceId -format value
            $installationPath = & $vswhere -property installationPath -format value
            Import-Module (Join-Path $installationPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
            Enter-VsDevShell $instanceId -SkipAutomaticLocation -Arch amd64
            batch_files\test_arm.bat

      - run:
          name: copy test files to ./workspace
          command: |
            mkdir workspace
            mkdir workspace/exe_container
            cp build/ReleaseARM-Test/tests/exe_container/exe_container.exe workspace/exe_container
            mkdir workspace/json_check
            cp build/ReleaseARM-Test/tests/json_check/json_check.exe workspace/json_check
            cp tests/json_check/*.json workspace/json_check
            mkdir workspace/main_frame
            cp build/ReleaseARM-Test/tests/main_frame/main_frame.exe workspace/main_frame
            cp tests/main_frame/*.json workspace/main_frame
            cp examples/all_keys/gui_definition.json workspace
          shell: bash

      - persist_to_workspace:
          root: ./
          paths:
            - workspace

  # run tests with wine on arm64 machine
  run_tests:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: sudo apt-get update && sudo apt-get install -y xvfb wine
      - run: |
          ws="$(winepath -w "workspace")"
          cd workspace
          DISPLAY=:99 wine exe_container/exe_container.exe "${ws}\gui_definition.json"
          DISPLAY=:99 wine json_check/json_check.exe "${ws}\json_check\broken.json" "${ws}\gui_definition.json"
          DISPLAY=:99 wine main_frame/main_frame.exe "${ws}\gui_definition.json" "${ws}\main_frame\config_ascii.json" "${ws}\main_frame\config_utf.json"
