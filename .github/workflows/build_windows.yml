name: build_windows

on:
  workflow_dispatch:
  
env:
  ZIP_NAME: SimpleCommandRunner
  CACHE_NAME: main

jobs:
  build:
    runs-on: windows-2022
    steps:

      - uses: actions/checkout@v3

      - name: Check wxWidget version
        id: wx-version
        run: |
          VERSION=$(cat WX_VERSION.txt)
          echo "::set-output name=version::$VERSION"
        shell: bash

      - name: Cache wxWidget
        uses: actions/cache@v2
        id: cache-wx
        with:
          path: "C:/wxWidgets-${{ steps.wx-version.outputs.version }}"
          key: ${{ runner.os }}-wx${{ steps.wx-version.outputs.version }}-${{ env.CACHE_NAME }}
        
      - name: install wxWidget
        if: steps.cache-wx.outputs.cache-hit != 'true'
        run: |
          cd batch_files
          ./download_wxWidgets.bat
          ./build_wxWidgets.bat

      - name: build exe
        run: |
          cd batch_files
          ./build_exe.bat

      - name: Copy files
        run: |
          mkdir -p ../release
          cp Release/Release/SimpleCommandRunner.exe ../release/
          cp examples/5_advanced/gui_definition.json ../release/
          cp changelog.txt ../release/
          cp license.txt ../release/
        shell: bash

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          directory: '../release'
          type: 'zip'
          filename: '${{ env.ZIP_NAME }}.zip'
          exclusions: '*.git* .gitignore'
          
      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changelog
            - First Change
            - Second Change
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset-python
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../release/${{ env.ZIP_NAME }}.zip
          asset_name: ${{ env.ZIP_NAME }}-${{ runner.os }}.zip
          asset_content_type: application/zip