name: build_mac

on:
  workflow_dispatch:
  
env:
  ZIP_NAME: SimpleCommandRunner

jobs:
  build:
    runs-on: macos-11
    steps:

      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/v* ]]; then
            TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          else
            TAG=$(echo ${{ github.sha }} | cut -c1-7)
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        shell: bash

      - uses: actions/checkout@v3

      - name: Check wxWidgets version
        id: wx-version
        run: |
          VERSION=$(cat WX_VERSION.txt)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        shell: bash
      
      - name: Cache wxWidgets
        uses: actions/cache@v3
        id: cache-wx
        with:
          path: "~/wxWidgets-${{ steps.wx-version.outputs.version }}"
          key: ${{ runner.os }}-wx${{ steps.wx-version.outputs.version }}-Release
            
      - name: build wxWidgets
        if: steps.cache-wx.outputs.cache-hit != 'true'
        run: |
          cd shell_scripts
          bash download_wxWidgets.sh
          bash build_wxWidgets.sh NoTest
          
      - name: build exe
        run: |
          bash shell_scripts/build_exe.sh
          
      - name: Archive Release
        run: |
          mkdir -p archive/${{ env.ZIP_NAME }}
          cp build/Release/SimpleCommandRunner archive/${{ env.ZIP_NAME }}
          cp examples/other_features/help/gui_definition.json archive/${{ env.ZIP_NAME }}
          cp changelog.txt archive/${{ env.ZIP_NAME }}
          cp license.txt archive/${{ env.ZIP_NAME }}
          cd archive
          tar -jcvf ${{ env.ZIP_NAME }}-mac-x64.tar.bz2 ${{ env.ZIP_NAME }}
          mv ${{ env.ZIP_NAME }}-mac-x64.tar.bz2 ../

      - name: Install UPX
        run: brew install upx
        if: runner.os == 'macOS'

      - name: Compress exe with UPX
        run: |
          cd archive/${{ env.ZIP_NAME }}
          upx SimpleCommandRunner --best

      - name: Archive UPX Release
        run: |
          cd archive
          tar -jcvf ${{ env.ZIP_NAME }}-mac-x64-upx.tar.bz2 ${{ env.ZIP_NAME }}
          mv ${{ env.ZIP_NAME }}-mac-x64-upx.tar.bz2 ../

      - name: Create Release Draft
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.check-tag.outputs.tag }}-mac
          name: ${{ steps.check-tag.outputs.tag }}
          body: |
            Changelog
            - First Change
            - Second Change
          draft: true
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.check-tag.outputs.tag }}-mac ${{ env.ZIP_NAME }}-mac-x64.tar.bz2
          gh release upload ${{ steps.check-tag.outputs.tag }}-mac ${{ env.ZIP_NAME }}-mac-x64-upx.tar.bz2
