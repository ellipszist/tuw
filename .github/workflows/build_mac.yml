name: build_mac

on:
  workflow_dispatch:
  
env:
  ZIP_NAME: SimpleCommandRunner

jobs:
  build:
    runs-on: macos-10.15
    steps:
        
      - uses: actions/checkout@v2

      - name: Check wxWidget version
        id: wx-version
        run: |
          VERSION=$(cat WX_VERSION.txt)
          echo "::set-output name=version::$VERSION"
        shell: bash
      
      - name: Cache wxWidget
        uses: actions/cache@v2
        id: cache-wx
        with:
          path: "~/wxWidgets-${{ steps.wx-version.outputs.version }}"
          key: ${{ runner.os }}-wx${{ steps.wx-version.outputs.version }}
            
      - name: build wxWidget
        if: steps.cache-wx.outputs.cache-hit != 'true'
        run: |
          cd shell_scripts
          download_wxWidget.sh
          build_wxWidget.sh
          
      - name: install wxWidget
        run: |
          cd shell_scripts
          install_wxWidget.sh
          
      - name: build exe
        run: |
          cd shell_scripts
          build_exe.sh
          
      - name: copy files
        run: |
          mkdir -p ../release/${{ env.ZIP_NAME }}
          cp build/SimpleCommandRunner ../release/${{ env.ZIP_NAME }}
          cp samples/advanced/gui_definition.json ../release/${{ env.ZIP_NAME }}
          cp changelog.txt ../release/${{ env.ZIP_NAME }}
          cp license.txt ../release/${{ env.ZIP_NAME }}
          cd ../release
          tar -jcvf ${{ env.ZIP_NAME }}.tar.bz2 ${{ env.ZIP_NAME }}
          
      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changelog
            - First Change
            - Second Change
          draft: true
          prerelease: false
          
      - name: Upload Release Asset for ubuntu
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../release/${{ env.ZIP_NAME }}.tar.bz2
          asset_name: ${{ env.ZIP_NAME }}-${{ runner.os }}.tar.bz2
          asset_content_type: application/zip