name: build_all

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
  
env:
  ZIP_NAME: SimpleCommandRunner

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.check-tag.outputs.tag }}
      wx_version: ${{ steps.wx-version.outputs.version }}
    steps:
    
      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/v* ]]; then
            TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          else
            TAG=$(echo ${{ github.sha }} | cut -c1-7)
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        shell: bash
      
      - uses: actions/checkout@v3

      - name: Create Release Draft
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.check-tag.outputs.tag }}
          name: ${{ steps.check-tag.outputs.tag }}
          body: |
            ## Changelog

            - First Change
            - Second Change

            ## Notes

            - Linux build only supports Ubuntu 20.04 or later due to the glibc dependencies.
            - Linux build and Windows build only support x64 architecture. (macOS build supports ARM chips like Apple M1.)

            > [Build the executable](https://github.com/matyalatte/Simple-Command-Runner/blob/libui/docs/Building.md) by yourself if you want to use it on unsupported devices.
          draft: true
          prerelease: false

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            exe_ext: .exe
            zip_ext: zip
          - os: ubuntu-20.04
            exe_ext: ""
            zip_ext: tar.bz2
          - os: macos-11
            exe_ext: ""
            zip_ext: tar.bz2
    runs-on: ${{ matrix.os }}
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4

      - name: Install Meson for Windows
        if: runner.os == 'Windows'
        run: pip install meson

      - name: Install Meson for Unix
        if: runner.os != 'Windows'
        run: pip3 install meson ninja

      - name: Prepare MSVC for Windows
        if: runner.os == 'Windows'
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64

      - name: Install gtk for Linux
        if: runner.os == 'Linux'
        run: sudo apt -y install libgtk-3-dev

      - name: Build exe for Windows
        if: runner.os == 'Windows'
        run: batch_files/build.bat
          
      - name: Build exe for Unix
        if: runner.os != 'Windows'
        run: bash shell_scripts/build.sh Release Universal

      - name: Show info about exe
        run: bash shell_scripts/exe_info.sh
        shell: bash

      - name: Copy files
        run: |
          mkdir -p archive/${{ env.ZIP_NAME }}
          cp build/Release/SimpleCommandRunner${{ matrix.exe_ext }} archive/${{ env.ZIP_NAME }}
          cp examples/other_features/help/gui_definition.json archive/${{ env.ZIP_NAME }}
          cp changelog.txt archive/${{ env.ZIP_NAME }}
          cp license.txt archive/${{ env.ZIP_NAME }}
        shell: bash

      - name: Archive release for Windows
        if: runner.os == 'Windows'
        run: |
          cd archive/${{ env.ZIP_NAME }}
          powershell Compress-Archive -Force -Path * -Destination ../${{ env.ZIP_NAME }}-${{ needs.setup.outputs.tag }}-${{ runner.os }}.${{ matrix.zip_ext }}

      - name: Archive release for Unix
        if: runner.os != 'Windows'
        run: |
          cd archive
          tar -jcvf ${{ env.ZIP_NAME }}-${{ needs.setup.outputs.tag }}-${{ runner.os }}.${{ matrix.zip_ext }} ${{ env.ZIP_NAME }}

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.setup.outputs.tag }} archive/${{ env.ZIP_NAME }}-${{ needs.setup.outputs.tag }}-${{ runner.os }}.${{ matrix.zip_ext }}
